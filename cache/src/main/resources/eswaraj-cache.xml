<?xml version='1.0' encoding='UTF-8'?>
<beans xmlns='http://www.springframework.org/schema/beans' 
    xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' 
    xmlns:context='http://www.springframework.org/schema/context'
	xmlns:c='http://www.springframework.org/schema/c' 
	xmlns:p='http://www.springframework.org/schema/p'
	xmlns:cache='http://www.springframework.org/schema/cache'
	xsi:schemaLocation='http://www.springframework.org/schema/beansvhttp://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd'>

    <context:annotation-config />
	<context:component-scan base-package='com.eswaraj.cache' />
	<context:property-placeholder location='classpath:/eswaraj-cache.properties' />

	<!-- For using @Cacheable if needed -->
	<cache:annotation-driven />

	<!-- Jedis ConnectionFactory -->
	<bean id='jedisConnectionFactory' class='org.springframework.data.redis.connection.jedis.JedisConnectionFactory' 
	    p:host-name='${eswaraj.cache.redis.hostname}' p:port='${eswaraj.cache.redis..port}' p:use-pool='true' />

	<!-- Spring Data Redis definitions -->
	<bean id='redisTemplate' class='org.springframework.data.redis.core.RedisTemplate' p:connection-factory-ref='jedisConnectionFactory' />
	<bean id='cacheManager' class='org.springframework.data.redis.cache.RedisCacheManager' c:template-ref='redisTemplate' />
</beans>