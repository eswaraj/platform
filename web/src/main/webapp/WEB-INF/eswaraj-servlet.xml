<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:beans="http://www.springframework.org/schema/beans" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:p='http://www.springframework.org/schema/p'
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd 
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd'">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<beans:bean id="propertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <beans:property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
        <beans:property name="searchSystemEnvironment" value="true" />
        <beans:property name="properties">
            <util:properties>
                <beans:prop key="dev">ravi</beans:prop>
            </util:properties>
        </beans:property>
    </beans:bean>
     <beans:import resource="controllers.xml" />

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven conversion-service="conversionService" enableMatrixVariables="true">
		<argument-resolvers>
			<beans:bean class="com.eswaraj.web.controller.CustomArgumentResolver" />
		</argument-resolvers>
		<async-support default-timeout="3000">
			<callable-interceptors>
				<beans:bean class="com.eswaraj.web.controller.TimeoutCallableProcessingInterceptor" />
			</callable-interceptors>
		</async-support>
	</annotation-driven>
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources/ directory -->
	<resources mapping="/admin/**" location="/admin/" />
	<resources mapping="/css/**" location="/css/" />
	<resources mapping="/fonts/**" location="/fonts/" />
	<resources mapping="/images/**" location="/images/" />
	<resources mapping="/js/**" location="/js/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> <beans:property name="prefix" value="/WEB-INF/jsps/" /> <beans:property name="suffix" value=".jsp" /> </beans:bean> -->
	<beans:bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<beans:property name="prefix" value="/WEB-INF/jsps/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

		<!-- setting maximum upload size -->
		<beans:property name="maxUploadSize" value="10000000" />

	</beans:bean>


	<!-- Only needed because we install custom converters to support the examples in the org.springframewok.samples.mvc.convert package -->
	<beans:bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<beans:property name="formatters">
			<beans:bean class="com.eswaraj.web.controller.MaskFormatAnnotationFormatterFactory" />
		</beans:property>
	</beans:bean>

	<task:annotation-driven />
	
</beans:beans>